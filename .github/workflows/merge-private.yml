name: "Merge Private to Main"
on:
  push:
    branches:
      - main
    paths-ignore:
      - "lambda/**"
      - "**/*.tf"
      - ".github/workflows/**"
  workflow_dispatch: {}
  repository_dispatch:
    types: [content-updated-private]

env:
  BUCKET_SUFFIX: private.handbook.burendo.com

jobs:
  build-handbook:
    name: "Build Handbook content"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: "Install dependencies"
        id: deps
        run: pip install Jinja2 PyYAML boto3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.ACTIONS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ACTIONS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_GHA_ROLE }}
          role-duration-seconds: 900
          role-session-name: ${{ github.run_id }}-${{ github.run_number }}
          aws-region: eu-west-2

      - name: "Bootstrap"
        id: bootstrap
        run: |
          python bootstrap.py > ${{ github.workspace }}/${{ github.run_id }}-${{ github.run_number }}.log
          sed -i "s/Administrator/ci/" terraform/variables.tf
        working-directory: .
        env:
          TF_WORKSPACE: burendo-prod
          AWS_SECRETS_ROLE: ${{ secrets.AWS_GHA_ROLE }}
          AWS_DEFAULT_REGION: eu-west-2

      - name: "Pull PUBLIC handbook content"
        id: public-content
        run: |
          git clone https://github.com/BurendoUK/burendo-handbook-public.git
        working-directory: .
        continue-on-error: false
      
      - name: "Move PUBLIC handbook content"
        id: public-content-copy
        run: |
          mkdir -p burendo-handbook/docs
          mv burendo-handbook-public/docs/* burendo-handbook/docs
        working-directory: .
        continue-on-error: false
      
      - name: "Move PUBLIC blog content"
        id: public-blog-copy
        run: |
          mkdir -p burendo-handbook/blog
          mv burendo-handbook-public/blog/* burendo-handbook/blog
        working-directory: .
        continue-on-error: false

      - name: "Pull PRIVATE handbook content"
        id: private-content
        run: |
          echo "https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/BurendoUK/burendo-handbook-private"
          git clone https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/BurendoUK/burendo-handbook-private
        working-directory: .
        continue-on-error: false
        env:
          GITHUB_USER: ${{ secrets.GH_USER }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      
      - name: "Move PRIVATE handbook content"
        id: private-content-copy
        run: |
          cp -r burendo-handbook-private/docs/* burendo-handbook/docs
          rm -r burendo-handbook-private/docs/
        working-directory: .
        continue-on-error: false

      - name: "Rename Private Configuration"
        id: rename-private-config
        run: mv docusaurus.config.private.js docusaurus.config.js
        working-directory: ./burendo-handbook
        continue-on-error: false

      - name: "Build handbook with content"
        id: build-handbook
        run: |
          npm install
          npm run build
        working-directory: ./burendo-handbook
        continue-on-error: false

      - name: "Copy build output to PRIVATE S3"
        id: copy-to-s3
        run: aws s3 sync build s3://${BUCKET_SUFFIX} --delete
        working-directory: burendo-handbook
        continue-on-error: false

      - name: "Terminate Session"
        if: ${{ always() }}
        id: terminate-session
        run: |
          set -e
          aws ssm terminate-session --session-id ${{ github.run_id }}-${{ github.run_number }}

  report-runs:
    name: Report Status
    runs-on: ubuntu-latest
    needs: build-handbook
    if: always()
    steps:
      - name: "Report Failures"
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notify_when: 'success,failure,warnings'
          notification_title: '${{ github.workflow }} has ${{ job.status }}'
          message_format: '@here *${{ github.workflow }}* ${{ job.status }} in ${{ github.repository }} triggered by ${{ github.triggering_actor }}'
          footer: 'Run id is ${{ github.run_id }}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_BUILD_NOTIFICATIONS_WEBHOOK }}
